<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!--여기 잇는 이 com.블라블라-->
<mapper namespace="com.team.NewLearn.mapper.community.CommunityMapper">

    <sql id="criteria">
        <trim prefix="(" suffix=") AND">
            <foreach collection="typeArr" item="type" separator="or">
                <if test="type =='T'.toString()">
                    title like '%'|| #{keyword}||'%'
                </if>
                <if test="type =='C'.toString()">
                    content like '%'||#{keyword}||'%'
                </if>
                <if test="type =='W'.toString()">
                    writer like '%'|| #{keyword}||'%'
                </if>

            </foreach>
        </trim>
    </sql>

    <select id="searchTest" resultType="com.team.NewLearn.dto.community.CommunityDTO">

        select
        memberId as memberId
        , email as email
        , password as password
        , name as name
        , role as role
        , passwordLock as passwordLock
        , regDate as regDate
        , status as status

        from memberList
        <include refid="criteria"></include>
        order by memberId desc
        limit #{pageStart},#{amount};

    </select>


  <!--  <insert id="memberSignUp" parameterType="com.team.NewLearn.dto.community.CommunityDTO">
        /*회원 가입*/

        insert into memberlist (email, password, name) value (
            #{email}
            ,#{password}
            ,#{name}
            );

    </insert>

    <select id="selectAllMember" resultType="com.team.NewLearn.dto.community.CommunityDTO">
        select
        memberId as memberId
        , email as email
        , password as password
        , name as name
        , role as role
        , passwordLock as passwordLock
        , regDate as regDate
        , status as status

        from memberList

        <include refid="criteria"></include>
        order by memberId desc
        limit #{pageStart},#{amount};
    </select>


    <select id="selectMember" resultType="com.team.NewLearn.dto.community.CommunityDTO">
        select
            memberId as memberId
             , email as email
             , password as password
             , name as name
             , role as role
             , passwordLock as passwordLock
             , regDate as regDate
             , status as status

        from memberList
        where email = #{email}

    </select>



    <select id="getTotal" resultType="int">

        select count(memberId)
        from memberList

    </select>

    <select id="selectDetailMember" resultType="com.team.NewLearn.dto.community.CommunityDTO">
        select
            memberId as memberId
             , email as email
             , password as password
             , name as name
             , role as role
             , passwordLock as passwordLock
             , regDate as regDate
             , status as status

        from memberList
        where memberId = #{memberId}
    </select>

    <delete id="memberDelete" parameterType="int">
        DELETE
        FROM memberList
        WHERE memberId = #{memberId}
    </delete>

    <update id="memberUpdate" parameterType="com.team.NewLearn.dto.community.CommunityDTO">

        update memberList
        set
            name = #{name},
            Password = #{password}

        where memberId = #{memberId}

    </update>-->

</mapper>